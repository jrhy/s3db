on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Test and release
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: ^1.20.3
    - uses: goto-bus-stop/setup-zig@v2
    - run: ./release.sh
    - uses: actions/upload-artifact@v3
      with:
        name: release
        path: release/*
    - name: Dependabot metadata
      if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
      id: dependabot-metadata
      uses: dependabot/fetch-metadata@v1.3.1
    - name: Enable auto-merge for Dependabot PRs
      if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
      run: gh pr merge --auto --rebase "$PR_URL"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Approve patch and minor updates for Dependabot PRs
      if: ${{ (github.event.pull_request.user.login == 'dependabot[bot]') &&
          ((steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch') || (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor')) }}
      run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a patch or minor update**"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Approve major updates of development dependencies for Dependabot PRs
      if: ${{ (github.event.pull_request.user.login == 'dependabot[bot]') &&
          (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major') && (steps.dependabot-metadata.outputs.dependency-type == 'direct:development') }}
      run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a major update of a dependency used only in development**"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Comment on major updates of non-development dependencies for Dependabot PRs
      if: ${{ (github.event.pull_request.user.login == 'dependabot[bot]') &&
          (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major') && (steps.dependabot-metadata.outputs.dependency-type == 'direct:production') }}
      run: |
        gh pr comment $PR_URL --body "I'm **not approving** this PR because **it includes a major update of a dependency**"
        gh pr edit $PR_URL --add-label "requires-manual-qa"
      env:
        PR_URL: ${{github.event.pull_request.html_url}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Tag new releases
      if: ${{ ((github.ref == 'refs/heads/main') && (github.event_name == 'push')) || (
        (github.event.pull_request.user.login == 'dependabot[bot]') && 
        (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' && steps.dependabot-metadata.outputs.dependency-type == 'direct:development') ||
          (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch') || (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor')) }}
      id: tag
      uses: anothrNick/github-tag-action@1.61.0 # Don't use @master unless you're happy to test the latest version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch
        WITH_V: true
    - name: add version number to release files
      if: ${{ ((github.ref == 'refs/heads/main') && (github.event_name == 'push')) || (
        (github.event.pull_request.user.login == 'dependabot[bot]') && 
        (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' && steps.dependabot-metadata.outputs.dependency-type == 'direct:development') ||
          (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch') || (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor')) }}
      run: |
          mv release/s3db-linux-amd64-glibc.sqlite-ext.so.gz release/s3db-${{ steps.tag.outputs.tag }}-linux-amd64-glibc.sqlite-ext.so.gz
          mv release/s3db-linux-arm-glibc.sqlite-ext.so.gz release/s3db-${{ steps.tag.outputs.tag }}-linux-arm-glibc.sqlite-ext.so.gz
    - name: Create Release
      if: ${{ ((github.ref == 'refs/heads/main') && (github.event_name == 'push')) || (
        (github.event.pull_request.user.login == 'dependabot[bot]') && 
        (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-major' && steps.dependabot-metadata.outputs.dependency-type == 'direct:development') ||
          (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-patch') || (steps.dependabot-metadata.outputs.update-type == 'version-update:semver-minor')) }}
      uses: "marvinpinto/action-automatic-releases@v1.2.1"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ needs.tag.outputs.tag }}
        prerelease: false
        files: |
          release/s3db-${{ steps.tag.outputs.tag }}-linux-amd64-glibc.sqlite-ext.so.gz
          release/s3db-${{ steps.tag.outputs.tag }}-linux-arm-glibc.sqlite-ext.so.gz

