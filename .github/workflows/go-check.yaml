name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.20.2

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -tags sqlite_vtable -v ./...

    - name: Test
      run: go test -tags sqlite_vtable -race -v ./...

  go_generate:
    runs-on: ubuntu-22.04
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.20.2
    - name: check that 'go generate' is clean
      run: |
        pkgs=$(go list ./...)
        go generate $pkgs
        echo
        echo
        git diff --name-only --exit-code || (echo "The files above need updating. Please run 'go generate'."; exit 1)

  go_mod_tidy:
    runs-on: ubuntu-22.04
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.20.2
    - name: check that 'go mod tidy' is clean
      run: |
        pkgs=$(go list ./...)
        go mod tidy
        echo
        echo
        git diff --name-only --exit-code || (echo "Please run 'go mod tidy'."; exit 1)

